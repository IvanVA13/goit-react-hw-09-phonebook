{"version":3,"sources":["components/Section/Section.module.scss","components/ContactForm/ContactForm.module.scss","components/Filter/Filter.module.scss","components/ContactList/ContactList.module.scss","components/Section/Section.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","views/ContactsPage.js"],"names":["module","exports","Section","title","children","main","className","styles","section","defaultProps","ContactForm","useState","name","setName","number","setNumber","contacts","useSelector","getItems","dispatch","useDispatch","handleChange","e","target","value","console","warn","reset","Form","form","onSubmit","preventDefault","find","contact","alert","addContact","Group","controlId","Label","Control","onChange","type","pattern","autoComplete","required","placeholder","Button","variant","Filter","getFilter","onFilter","useCallback","filterContact","InputGroup","Text","id","FormControl","ContactList","getVisibleContacts","useEffect","fetchContacts","handleDelContact","delContact","length","map","Card","Header","Body","Title","onClick","ContactsPage"],"mappings":"mIACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAa,4BAA4B,MAAQ,yB,oBCAtGD,EAAOC,QAAU,CAAC,KAAO,4B,oBCAzBD,EAAOC,QAAU,CAAC,eAAe,+B,oBCAjCD,EAAOC,QAAU,CAAC,gBAAgB,mCAAmC,qBAAqB,0C,4ECGpFC,EAAU,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAUC,EAApB,EAAoBA,KAApB,OACd,0BAASC,UAAWC,IAAOC,QAA3B,UACGH,EACC,oBAAIC,UAAWC,IAAO,cAAtB,SAAsCJ,IAEtC,oBAAIG,UAAWC,IAAOJ,MAAtB,SAA8BA,IAE/BC,MAILF,EAAQO,aAAe,CACrBN,MAAO,GACPE,MAAM,GAQOH,Q,6DC2DAQ,EA1EK,WAClB,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KACMC,EAAWC,YAAYC,KACvBC,EAAWC,cAEXC,EAAe,SAAAC,GACnB,MAAwBA,EAAEC,OAAlBX,EAAR,EAAQA,KAAMY,EAAd,EAAcA,MACd,OAAQZ,GACN,IAAK,OACHC,EAAQW,GACR,MAEF,IAAK,SACHT,EAAUS,GACV,MAEF,QACEC,QAAQC,KAAR,eAAqBd,EAArB,mBAaAe,EAAQ,WACZd,EAAQ,IACRE,EAAU,KAGZ,OACE,eAACa,EAAA,EAAD,CAAMtB,UAAWC,IAAOsB,KAAMC,SAfX,SAAAR,GACnBA,EAAES,iBAEFf,EAASgB,MAAK,SAAAC,GAAO,OAAIA,EAAQrB,OAASA,KACtCsB,MAAM,GAAD,OAAItB,EAAJ,4BACLO,EAASgB,YAAWvB,EAAME,IAC9Ba,KASA,UACE,eAACC,EAAA,EAAKQ,MAAN,CAAY9B,UAAU,OAAO+B,UAAU,iBAAvC,UACE,cAACT,EAAA,EAAKU,MAAN,mBACA,cAACV,EAAA,EAAKW,QAAN,CACEC,SAAUnB,EACVoB,KAAK,OACL7B,KAAK,OACLY,MAAOZ,EACP8B,QAAQ,yHACRvC,MAAM,kcACNwC,aAAa,MACbC,UAAQ,EACRC,YAAY,kBAIhB,eAACjB,EAAA,EAAKQ,MAAN,CAAY9B,UAAU,OAAO+B,UAAU,oBAAvC,UACE,cAACT,EAAA,EAAKU,MAAN,qBACA,cAACV,EAAA,EAAKW,QAAN,CACEC,SAAUnB,EACVoB,KAAK,SACL7B,KAAK,SACLY,MAAOV,EACP4B,QAAQ,yFACRvC,MAAM,giBACNwC,aAAa,MACbC,UAAQ,EACRC,YAAY,0BAGhB,cAACC,EAAA,EAAD,CAAQC,QAAQ,kBAAkBN,KAAK,SAAvC,6B,oCC7CSO,EAzBA,WACb,IAAMxB,EAAQP,YAAYgC,KACpB9B,EAAWC,cAEX8B,EAAWC,uBACf,SAAA7B,GACEH,EAASiC,YAAc9B,EAAEC,OAAOC,UAElC,CAACL,IAEH,OACE,eAACkC,EAAA,EAAD,CAAY/C,UAAS,eAAUC,IAAO,iBAAtC,UACE,cAAC8C,EAAA,EAAWC,KAAZ,CAAiBC,GAAG,eAApB,kBACA,cAACC,EAAA,EAAD,CACEf,KAAK,OACLjB,MAAOA,EACPgB,SAAUU,EACVL,YAAY,iBACZ,aAAW,iBACX,mBAAiB,qB,2BCkCVY,EAhDK,WAClB,IAAMzC,EAAWC,YAAYyC,KACvBvC,EAAWC,cACjBuC,qBAAU,WACRxC,EAASyC,iBACR,CAACzC,IAEJ,IAAM0C,EAAmBV,uBACvB,SAAAI,GAAE,OAAI,kBAAMpC,EAAS2C,YAAWP,OAChC,CAACpC,IAEH,OACsB,IAApBH,EAAS+C,QACP,oBAAIzD,UAAWC,IAAO,iBAAtB,SACGS,EAASgD,KAAI,YAA2B,IAAxBpD,EAAuB,EAAvBA,KAAME,EAAiB,EAAjBA,OAAQyC,EAAS,EAATA,GAC7B,OACE,oBAAIjD,UAAWC,IAAO,sBAAtB,SACE,eAAC0D,EAAA,EAAD,WACE,eAACA,EAAA,EAAKC,OAAN,oBAAoBtD,KACpB,eAACqD,EAAA,EAAKE,KAAN,WACE,cAACF,EAAA,EAAKG,MAAN,2BACA,cAACH,EAAA,EAAKX,KAAN,UAAYxC,IACZ,cAACgC,EAAA,EAAD,CACEC,QAAQ,iBACRsB,QAASR,EAAiBN,GAF5B,2BAN4CA,SCT/Ce,UAdM,WACnB,OACE,qCACE,cAAC,EAAD,CAASnE,MAAO,YAAaE,MAAM,EAAnC,SACE,cAAC,EAAD,MAEF,eAAC,EAAD,CAASF,MAAO,WAAhB,UACE,cAAC,EAAD,IACA,cAAC,EAAD","file":"static/js/contacts-page.60f1691c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__3oHiV\",\"main-title\":\"Section_main-title__EU8Cm\",\"title\":\"Section_title__FveYn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__b2W-A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input-layout\":\"Filter_input-layout__1pKd6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts-list\":\"ContactList_contacts-list__29XzO\",\"contacts-list-item\":\"ContactList_contacts-list-item__1U9TS\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Section.module.scss';\n\nconst Section = ({ title, children, main }) => (\n  <section className={styles.section}>\n    {main ? (\n      <h1 className={styles['main-title']}>{title}</h1>\n    ) : (\n      <h2 className={styles.title}>{title}</h2>\n    )}\n    {children}\n  </section>\n);\n\nSection.defaultProps = {\n  title: '',\n  main: false,\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n  main: PropTypes.bool,\n};\n\nexport default Section;\n","import { useState } from 'react';\nimport { Button, Form } from 'react-bootstrap';\n\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { addContact, getItems } from '../../redux/contacts';\nimport styles from './ContactForm.module.scss';\n\nimport React from 'react';\n\nconst ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(getItems);\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        console.warn(`This ${name} not support`);\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    contacts.find(contact => contact.name === name)\n      ? alert(`${name} is already in contacts`)\n      : dispatch(addContact(name, number));\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Form className={styles.form} onSubmit={handleSubmit}>\n      <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n        <Form.Label>Name</Form.Label>\n        <Form.Control\n          onChange={handleChange}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          autoComplete=\"off\"\n          required\n          placeholder=\"Enter name\"\n        />\n      </Form.Group>\n\n      <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n        <Form.Label>Number</Form.Label>\n        <Form.Control\n          onChange={handleChange}\n          type=\"number\"\n          name=\"number\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          autoComplete=\"off\"\n          required\n          placeholder=\"Enter phone number\"\n        />\n      </Form.Group>\n      <Button variant=\"outline-primary\" type=\"submit\">\n        Add contact\n      </Button>\n    </Form>\n  );\n};\n\nexport default ContactForm;\n","import { useCallback } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { FormControl, InputGroup } from 'react-bootstrap';\n\nimport { filterContact, getFilter } from '../../redux/contacts';\nimport styles from './Filter.module.scss';\n\nconst Filter = () => {\n  const value = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  const onFilter = useCallback(\n    e => {\n      dispatch(filterContact(e.target.value));\n    },\n    [dispatch],\n  );\n  return (\n    <InputGroup className={`mb-3 ${styles['input-layout']}`}>\n      <InputGroup.Text id=\"basic-addon1\">Name</InputGroup.Text>\n      <FormControl\n        type=\"text\"\n        value={value}\n        onChange={onFilter}\n        placeholder=\"Name to filter\"\n        aria-label=\"Name to filter\"\n        aria-describedby=\"basic-addon1\"\n      />\n    </InputGroup>\n  );\n};\n\nexport default Filter;\n","import PropTypes from 'prop-types';\nimport { useEffect, useCallback } from 'react';\nimport { Button, Card } from 'react-bootstrap';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport {\n  delContact,\n  fetchContacts,\n  getVisibleContacts,\n} from '../../redux/contacts';\nimport styles from './ContactList.module.scss';\n\nconst ContactList = () => {\n  const contacts = useSelector(getVisibleContacts);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const handleDelContact = useCallback(\n    id => () => dispatch(delContact(id)),\n    [dispatch],\n  );\n  return (\n    contacts.length !== 0 && (\n      <ul className={styles['contacts-list']}>\n        {contacts.map(({ name, number, id }) => {\n          return (\n            <li className={styles['contacts-list-item']} key={id}>\n              <Card>\n                <Card.Header>Name: {name}</Card.Header>\n                <Card.Body>\n                  <Card.Title>Phone number</Card.Title>\n                  <Card.Text>{number}</Card.Text>\n                  <Button\n                    variant=\"outline-danger\"\n                    onClick={handleDelContact(id)}\n                  >\n                    Delete\n                  </Button>\n                </Card.Body>\n              </Card>\n            </li>\n          );\n        })}\n      </ul>\n    )\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nexport default ContactList;\n","import Section from '../components/Section';\nimport ContactForm from '../components/ContactForm';\nimport Filter from '../components/Filter';\nimport ContactList from '../components/ContactList';\n\nconst ContactsPage = () => {\n  return (\n    <>\n      <Section title={'Phonebook'} main={true}>\n        <ContactForm />\n      </Section>\n      <Section title={'Contacts'}>\n        <Filter />\n        <ContactList />\n      </Section>\n    </>\n  );\n};\n\nexport default ContactsPage;\n"],"sourceRoot":""}